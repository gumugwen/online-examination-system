<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hw.mapper.QuestionSingleMapper">
    <resultMap id="BaseResultMap" type="com.hw.model.QuestionSingle">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="optionA" property="optiona" jdbcType="VARCHAR"/>
        <result column="optionB" property="optionb" jdbcType="VARCHAR"/>
        <result column="optionC" property="optionc" jdbcType="VARCHAR"/>
        <result column="optionD" property="optiond" jdbcType="VARCHAR"/>
        <result column="answer" property="answer" jdbcType="VARCHAR"/>
        <result column="score" property="score" jdbcType="DOUBLE"/>
        <result column="fk_teacher" property="fkTeacher" jdbcType="INTEGER"/>
        <result column="teacherName" property="teacherName"/>
        <result column="exam_id" property="examId" jdbcType="INTEGER"/>
        <result column="del_flag" property="delFlag" jdbcType="BIT"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, title, optionA, optionB, optionC, optionD, answer, score, fk_teacher, exam_id,
    del_flag
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from question_single
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByExamId" resultMap="BaseResultMap">
        select s.*,t.real_name as teacherName from question_single s,teacher t
        <where>
            exam_id=#{examId} and t.id=s.fk_teacher
            <if test="title!=null and title!=''">
                and title like CONCAT ('%',#{title},'%')
            </if>
        </where>
    </select>
    <select id="selectByIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from question_single
        <where>
            <if test="ids!=null and ids.size()>0">
                id in
                <foreach collection="ids" separator="," close=")" open="(" item="id" index="index">
                    #{id}
                </foreach>
            </if>

        </where>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from question_single
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.hw.model.QuestionSingle">
        insert into question_single (id, title, optionA,
                                     optionB, optionC, optionD,
                                     answer, score, fk_teacher,
                                     exam_id, del_flag)
        values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{optiona,jdbcType=VARCHAR},
                #{optionb,jdbcType=VARCHAR}, #{optionc,jdbcType=VARCHAR}, #{optiond,jdbcType=VARCHAR},
                #{answer,jdbcType=VARCHAR}, #{score,jdbcType=DOUBLE}, #{fkTeacher,jdbcType=INTEGER},
                #{examId,jdbcType=INTEGER}, #{delFlag,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.hw.model.QuestionSingle">
        insert into question_single
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="optiona != null">
                optionA,
            </if>
            <if test="optionb != null">
                optionB,
            </if>
            <if test="optionc != null">
                optionC,
            </if>
            <if test="optiond != null">
                optionD,
            </if>
            <if test="answer != null">
                answer,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="fkTeacher != null">
                fk_teacher,
            </if>
            <if test="examId != null">
                exam_id,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="optiona != null">
                #{optiona,jdbcType=VARCHAR},
            </if>
            <if test="optionb != null">
                #{optionb,jdbcType=VARCHAR},
            </if>
            <if test="optionc != null">
                #{optionc,jdbcType=VARCHAR},
            </if>
            <if test="optiond != null">
                #{optiond,jdbcType=VARCHAR},
            </if>
            <if test="answer != null">
                #{answer,jdbcType=VARCHAR},
            </if>
            <if test="score != null">
                #{score,jdbcType=DOUBLE},
            </if>
            <if test="fkTeacher != null">
                #{fkTeacher,jdbcType=INTEGER},
            </if>
            <if test="examId != null">
                #{examId,jdbcType=INTEGER},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <insert id="insertBatch">
        insert into question_single ( title, optionA,
        optionB, optionC, optionD,
        answer, score, fk_teacher,
        exam_id, del_flag)
        values
        <foreach collection="questionSingleList" index="index" item="single"  separator=",">
            (#{single.title}, #{single.optiona},
            #{single.optionb}, #{single.optionc}, #{single.optiond},
            #{single.answer}, #{single.score}, #{single.fkTeacher},
            #{single.examId}, #{single.delFlag})
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hw.model.QuestionSingle">
        update question_single
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="optiona != null">
                optionA = #{optiona,jdbcType=VARCHAR},
            </if>
            <if test="optionb != null">
                optionB = #{optionb,jdbcType=VARCHAR},
            </if>
            <if test="optionc != null">
                optionC = #{optionc,jdbcType=VARCHAR},
            </if>
            <if test="optiond != null">
                optionD = #{optiond,jdbcType=VARCHAR},
            </if>
            <if test="answer != null">
                answer = #{answer,jdbcType=VARCHAR},
            </if>
            <if test="score != null">
                score = #{score,jdbcType=DOUBLE},
            </if>
            <if test="fkTeacher != null">
                fk_teacher = #{fkTeacher,jdbcType=INTEGER},
            </if>
            <if test="examId != null">
                exam_id = #{examId,jdbcType=INTEGER},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hw.model.QuestionSingle">
        update question_single
        set title      = #{title,jdbcType=VARCHAR},
            optionA    = #{optiona,jdbcType=VARCHAR},
            optionB    = #{optionb,jdbcType=VARCHAR},
            optionC    = #{optionc,jdbcType=VARCHAR},
            optionD    = #{optiond,jdbcType=VARCHAR},
            answer     = #{answer,jdbcType=VARCHAR},
            score      = #{score,jdbcType=DOUBLE},
            fk_teacher = #{fkTeacher,jdbcType=INTEGER},
            exam_id    = #{examId,jdbcType=INTEGER},
            del_flag   = #{delFlag,jdbcType=BIT}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateDelFlagById">
        update question_single
        set del_flag = #{delFlag,jdbcType=BIT}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectQuestionByExamId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from question_single
        where exam_id = #{exam_id} and del_flag = 0
    </select>

    <select id="selectQuestionCountByExamId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select count(*) from question_single where exam_id = #{exam_id} and del_flag = 0;
    </select>
</mapper>