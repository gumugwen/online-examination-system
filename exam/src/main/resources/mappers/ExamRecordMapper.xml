<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hw.mapper.ExamRecordMapper">
    <resultMap id="BaseResultMap" type="com.hw.model.ExamRecord">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="result_id" property="resultId" jdbcType="INTEGER"/>
        <result column="questions_number" property="questionsNumber" jdbcType="INTEGER"/>
        <result column="answer" property="answer" jdbcType="VARCHAR"/>
        <result column="qtype" property="qtype" jdbcType="BIT"/>
        <result column="exam_id" property="examId" jdbcType="INTEGER"/>
        <result column="question_id" property="questionId" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="UnitResultMap_single" type="com.hw.model.vo.SingleQuestionResultVo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="result_id" property="result_id" jdbcType="INTEGER"/>
        <result column="questions_number" property="questions_number" jdbcType="INTEGER"/>
        <result column="answer" property="answer" jdbcType="VARCHAR"/>
        <result column="qtype" property="qtype" jdbcType="BIT"/>
        <result column="exam_id" property="exam_id" jdbcType="INTEGER"/>
        <result column="question_id" property="question_id" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="optionA" property="optionA" jdbcType="VARCHAR"/>
        <result column="optionB" property="optionB" jdbcType="VARCHAR"/>
        <result column="optionC" property="optionC" jdbcType="VARCHAR"/>
        <result column="optionD" property="optionD" jdbcType="VARCHAR"/>
        <result column="correct_answer" property="correct_answer" jdbcType="VARCHAR"/>
        <result column="question_score" property="question_score"/>
        <result column="right" property="right" jdbcType="BIT"/>
        <result column="get_score" property="get_score"/>
    </resultMap>
    <resultMap id="UnitResultMap_multi" type="com.hw.model.vo.MultiQuestionResultVo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="result_id" property="result_id" jdbcType="INTEGER"/>
        <result column="questions_number" property="questions_number" jdbcType="INTEGER"/>
        <result column="answer" property="answer" jdbcType="VARCHAR"/>
        <result column="qtype" property="qtype" jdbcType="BIT"/>
        <result column="exam_id" property="exam_id" jdbcType="INTEGER"/>
        <result column="question_id" property="question_id" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="optionA" property="optionA" jdbcType="VARCHAR"/>
        <result column="optionB" property="optionB" jdbcType="VARCHAR"/>
        <result column="optionC" property="optionC" jdbcType="VARCHAR"/>
        <result column="optionD" property="optionD" jdbcType="VARCHAR"/>
        <result column="correct_answer" property="correct_answer" jdbcType="VARCHAR"/>
        <result column="question_score" property="question_score"/>
        <result column="right" property="right" jdbcType="BIT"/>
        <result column="get_score" property="get_score"/>
    </resultMap>
    <resultMap id="UnitResultMap_judge" type="com.hw.model.vo.JudgeQustionResultVo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="result_id" property="result_id" jdbcType="INTEGER"/>
        <result column="questions_number" property="questions_number" jdbcType="INTEGER"/>
        <result column="answer" property="answer" jdbcType="VARCHAR"/>
        <result column="qtype" property="qtype" jdbcType="BIT"/>
        <result column="exam_id" property="exam_id" jdbcType="INTEGER"/>
        <result column="question_id" property="question_id" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="correct_answer" property="correct_answer" jdbcType="VARCHAR"/>
        <result column="question_score" property="question_score"/>
        <result column="right" property="right" jdbcType="BIT"/>
        <result column="get_score" property="get_score"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, result_id, questions_number, answer, qtype, exam_id, question_id
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from exam_record
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exam_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.hw.model.ExamRecord">
    insert into exam_record (id, result_id, questions_number, 
      answer, qtype, exam_id, 
      question_id)
    values (#{id,jdbcType=INTEGER}, #{resultId,jdbcType=INTEGER}, #{questionsNumber,jdbcType=INTEGER}, 
      #{answer,jdbcType=VARCHAR}, #{qtype,jdbcType=BIT}, #{examId,jdbcType=INTEGER}, 
      #{questionId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.hw.model.ExamRecord">
        insert into exam_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="resultId != null">
                result_id,
            </if>
            <if test="questionsNumber != null">
                questions_number,
            </if>
            <if test="answer != null">
                answer,
            </if>
            <if test="qtype != null">
                qtype,
            </if>
            <if test="examId != null">
                exam_id,
            </if>
            <if test="questionId != null">
                question_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="resultId != null">
                #{resultId,jdbcType=INTEGER},
            </if>
            <if test="questionsNumber != null">
                #{questionsNumber,jdbcType=INTEGER},
            </if>
            <if test="answer != null">
                #{answer,jdbcType=VARCHAR},
            </if>
            <if test="qtype != null">
                #{qtype,jdbcType=BIT},
            </if>
            <if test="examId != null">
                #{examId,jdbcType=INTEGER},
            </if>
            <if test="questionId != null">
                #{questionId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hw.model.ExamRecord">
        update exam_record
        <set>
            <if test="resultId != null">
                result_id = #{resultId,jdbcType=INTEGER},
            </if>
            <if test="questionsNumber != null">
                questions_number = #{questionsNumber,jdbcType=INTEGER},
            </if>
            <if test="answer != null">
                answer = #{answer,jdbcType=VARCHAR},
            </if>
            <if test="qtype != null">
                qtype = #{qtype,jdbcType=BIT},
            </if>
            <if test="examId != null">
                exam_id = #{examId,jdbcType=INTEGER},
            </if>
            <if test="questionId != null">
                question_id = #{questionId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hw.model.ExamRecord">
    update exam_record
    set result_id = #{resultId,jdbcType=INTEGER},
      questions_number = #{questionsNumber,jdbcType=INTEGER},
      answer = #{answer,jdbcType=VARCHAR},
      qtype = #{qtype,jdbcType=BIT},
      exam_id = #{examId,jdbcType=INTEGER},
      question_id = #{questionId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <insert id="insertExamRecordByList" parameterType="java.util.List">
        insert into
        exam_record(result_id,questions_number,answer,qtype,exam_id,question_id)
        values
        <foreach collection="list" item="it" separator=",">
            (#{it.resultId},#{it.questionsNumber},#{it.answer},#{it.qtype},#{it.examId},#{it.questionId})
        </foreach>
    </insert>

    <select id="selectUnitSingleMapByResultId" resultMap="UnitResultMap_single" parameterType="java.lang.Integer">
        select
        t1.id,t1.result_id,t1.questions_number,t1.answer record_answer,t1.qtype,t1.exam_id,t1.question_id,t2.title,
        t2.optionA,t2.optionB,t2.optionC,t2.optionD,t2.answer correct_answer,t2.score question_score,t3.right,t3.score get_score
        from ((exam_record t1 left join question_single t2   on t2.id = t1.question_id ) left join exam_result_question t3 on t3.question_id = t1.question_id and t3.qtype = t1.qtype)
        where t1.qtype=1 and t1.result_id = #{result_id} order by t1.questions_number
    </select>
    <select id="selectUnitMultiMapByResultId" resultMap="UnitResultMap_multi" parameterType="java.lang.Integer">
        select
        t1.id,t1.result_id,t1.questions_number,t1.answer record_answer,t1.qtype,t1.exam_id,t1.question_id,t2.title,
        t2.optionA,t2.optionB,t2.optionC,t2.optionD,t2.answer correct_answer,t2.score question_score,t3.right,t3.score get_score
        from ((exam_record t1 left join question_multi t2   on t2.id = t1.question_id ) left join exam_result_question t3 on t3.question_id = t1.question_id and t3.qtype = t1.qtype)
        where t1.qtype=2 and t1.result_id = #{result_id} order by t1.questions_number
    </select>
    <select id="selectUnitJudgeMapByResultId" resultMap="UnitResultMap_judge" parameterType="java.lang.Integer">
        select
        t1.id,t1.result_id,t1.questions_number,t1.answer record_answer,t1.qtype,t1.exam_id,t1.question_id,t2.title,
        t2.answer correct_answer,t2.score question_score,t3.right,t3.score get_score
        from ((exam_record t1 left join question_judge t2   on t2.id = t1.question_id ) left join exam_result_question t3 on t3.question_id = t1.question_id and t3.qtype = t1.qtype)
        where t1.qtype=3 and t1.result_id = #{result_id} order by t1.questions_number
    </select>

</mapper>